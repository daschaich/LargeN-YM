# SU(N) pure-gauge evolution with over-relaxation
# Generic make-include file
# This template file defines rules and macros common to all architectures
# It is intended to be an include file for other Makefiles
# Don't use it by itself!

# Target:
#   su3_ora uses over-relaxed quasi-heat bath algorithm

MYINCLUDEDIR = .
INCLUDEDIR = ../include
# Where the complex and su3 libraries are
LIBDIR = ../libraries

GLOBAL_HEADERS = ${INCLUDEDIR} ../libraries/include

MY_HEADERS = lattice.h \
             params.h  \
             defines.h \
             pg_includes.h

HEADERS = ${GLOBAL_HEADERS} ${MY_HEADERS} ${INLINE_HEADERS} ${SCIDAC_HEADERS}

MY_OBJECTS = control.o  \
             dsdu_qhb.o \
             monte.o    \
             relax.o    \
             setup.o    \
             update.o   \
             gauge_info.o

# Basic set from generic directory
G_OBJECTS = check_unitarity.o \
            field_utilities.o \
            gaugefix.o        \
            io_detect.o       \
            io_helpers.o      \
            io_lat.o          \
            io_lat_utils.o    \
            make_lattice.o    \
            nersc_cksum.o     \
            plaquette.o       \
            ploop.o           \
            reunitarize.o     \
            ranstuff.o        \
            remap_stdio_from_args.o

ifeq ($(strip ${HAVEQIO}),true)
  G_OBJECTS += io_scidac.o io_scidac_types.o
endif

# Selection of layout
LAYOUT = layout_hyper_prime.o

# Selection of the gauge force algorithm
ifeq ($(strip ${HAVEQOP}),true)
# Interface to access QOP
  SYMZK1FORCE = gauge_force_symzk1_qop.o
  SYMZK1FORCE += ${SYMZK1FORCEQOP}
else
  ifeq ($(strip ${HAVEQDP}),true)
    SYMZK1FORCE = gauge_force_symzk1_qdp.o
  else
    SYMZK1FORCE = gauge_force_imp.o
  endif
endif

ADD_OBJECTS = ${MACHINE_DEP_IO} ${COMMPKG} ${QDP_OBJECTS} ${SCIDAC_OBJECTS}

# Generic QOP objects
ifeq ($(strip ${HAVEQOP}),true)
  ADD_OBJECTS += ${GENERICQOP}
endif

OBJECTS = ${MY_OBJECTS} ${G_OBJECTS} \
          ${LAYOUT} ${ADD_OBJECTS} ${EXTRA_OBJECTS}

# Libraries for complex numbers and su3 functions
QCDLIB = ${LIBDIR}/su3.${PRECISION}.a ${LIBDIR}/complex.${PRECISION}.a

LIBRARIES = ${QCDLIB} ${SCIDAC_LIBRARIES}

# Default rule for C compilation
.c.o: ; ${CC} -c ${CFLAGS} $<

# To force a full remake when changing targets
LASTMAKE = .lastmake.${MAKEFILE}.${PRECISION}.${MYTARGET}

${LASTMAKE}: ${ALL_MAKES}
	-/bin/rm -f .lastmake.*
	${MAKE} -f ${MAKEFILE} clean
	touch ${LASTMAKE}

# All make files used in this compilation
ALL_MAKES = Make_template           \
            ${MAKEFILE}             \
            ../Make_template_qop    \
            ../Make_template_scidac \
            ../generic/Make_template

# To force a remake when changing any make file, header, or target
${OBJECTS} : ${HEADERS} ${LASTMAKE} ${ALL_MAKES}

##### Targets:
su3_ora::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" "DEFINES = -DORA_ALGORITHM"

clean:
	-/bin/rm -f *.o

# Rules for generic routines
include ../generic/Make_template

libmake:
	@echo Building libraries with ${MAKELIBRARIES}
	cd ${LIBDIR} ;\
	${MAKE} -f ${MAKELIBRARIES} "APP_CC=${CC}" "PRECISION=${PRECISION}" all

localmake: ${OBJECTS} ${LIBRARIES}
	${LD} -o ${MYTARGET} ${LDFLAGS} \
	${OBJECTS} ${QCDLIB} ${ILIB} -lm
	touch localmake

target: libmake localmake
