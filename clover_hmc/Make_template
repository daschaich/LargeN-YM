# clover fermions with nHYP smearing
# Generic make-include file
# This template file defines rules and macros common to all architectures
# It is intended to be an include file for other Makefiles
# Don't use it by itself!

# Targets:
#   su3_phi uses phi algorithm
#   su3_hmc uses hybrid Monte Carlo algorithm
#   su3_hmc_pcac also calculates propagators for PCAC along t direction
#       (if nx>nt then it calculates spacelike propagators as well)
#   su3_hmc_spectrum does spectrum measurements. NOT USED
#   su3_hmc_screen does screening measurements.  NOT USED
#  In all cases, defining "LU" causes the dynamical fermion matrix
#  to be the LU preconditioned matrix, on even sites only.

# Features:
#   nHYP smearing (one level only)
#   Hasenbusch preconditioning (one level only)
#   Multiple time scale integration
#   Omelyan integrator

#  The FAT flag selects fat vs. thin links.

MYINCLUDEDIR = .
INCLUDEDIR = ../include
# Where the complex and su3 libraries are
LIBDIR = ../libraries

GLOBAL_HEADERS = ${INCLUDEDIR}/config.h              \
                 ${INCLUDEDIR}/complex.h             \
                 ${INCLUDEDIR}/su3.h                 \
                 ${INCLUDEDIR}/comdefs.h             \
                 ${INCLUDEDIR}/macros.h              \
                 ${INCLUDEDIR}/field_alloc.h         \
                 ${INCLUDEDIR}/generic.h             \
                 ${INCLUDEDIR}/generic_clover.h      \
                 ${INCLUDEDIR}/generic_quark_types.h \
                 ${INCLUDEDIR}/generic_wilson.h      \
                 ${INCLUDEDIR}/generic_nhyp.h        \
                 ${INCLUDEDIR}/loopend.h             \
                 ${INCLUDEDIR}/io_lat.h

MY_HEADERS = lattice.h \
  params.h \
  defines.h \
  cl_dyn_includes.h \
  ${ADDHEADERS}

HEADERS = ${GLOBAL_HEADERS} ${MY_HEADERS} ${INLINE_HEADERS} ${SCIDAC_HEADERS}

# All required object files
# Basic set from current directory
MY_OBJECTS = control.o          \
             setup.o            \
             gauge_info.o       \
             grsource.o         \
             mult_sigma_mu_nu.o \
             udadu_mat_mu_nu.o  \
             udadu_mu_nu.o      \
             update_h.o         \
             update_o.o         \
             update_u.o         \
             f_measure_cl.o     \
             apply_bc.o         \
             chain_rule_f.o     \
             d_congradm_cl_field.o
#             chain_rule_sym_2.o

# More from current directory, for improved action only
IMP_OBJECTS = gauge_action.o \
              loop_table.o   \
              path.o         \

# Basic set from generic directory
G_OBJECTS = check_unitarity.o \
            io_helpers.o      \
            io_lat4.o         \
            io_lat_utils.o    \
            make_lattice.o    \
            nersc_cksum.o     \
            d_plaq4.o         \
            d_plaq4_lcl.o     \
            ploop_dist.o      \
            ranmom.o          \
            ranstuff.o        \
            reunitarize2.o    \
            remap_stdio_from_args.o

ifeq ($(strip ${HAVEQIO}),true)
  G_OBJECTS += io_scidac.o
endif

# Basic set from generic_wilson directory
G_WILSON_OBJECTS = boundary_flip.o   \
                   boundary_flip_x.o \
                   wilson_invert.o   \
                   dslash_w_field.o   \
                   dslash_w.o         \
                   fermion_rep.o      \
                   fermion_rep_f.o
#                   fermion_rep_sym_2.o

# Basic set from generic_clover directory
G_CLOVER_OBJECTS = f_mu_nu.o    \
                   make_clov2.o \
                   d_cgilu_cl_lean.o

# Basic set from generic_nhyp
G_NHYP_OBJECTS = block_nhyp.o \
                 nhyp.o       \
                 force_nhyp.o

# Uncomment for nHYP smearing
FAT = -DNHYP -DNHYP_JACOBI
ifdef FAT
  THIN_OR_FAT= ${FAT}
else
  THIN_OR_FAT=
  G_NHYP_OBJECTS=
endif
DEFINES = ${THIN_OR_FAT} -DBETA_FREP

# Selection of layout
ifeq ($(strip ${HAVEQDP}),true)
  LAYOUT = layout_qdp.o # Required
else
  LAYOUT = layout_hyper_prime.o
endif

ADD_OBJECTS = ${MACHINE_DEP_IO} ${COMMPKG} ${QDP_OBJECTS} ${SCIDAC_OBJECTS}

# Generic QOP objects
ifeq ($(strip ${HAVEQOP}),true)
  ADD_OBJECTS += ${GENERICQOP}
endif

OBJECTS = ${MY_OBJECTS} ${G_OBJECTS} ${G_WILSON_OBJECTS} \
          ${G_CLOVER_OBJECTS} ${G_NHYP_OBJECTS}          \
          ${LAYOUT} ${ADD_OBJECTS} ${EXTRA_OBJECTS}

# Libraries for complex numbers and su3 functions
QCDLIB = ${LIBDIR}/su3.${PRECISION}.a ${LIBDIR}/complex.${PRECISION}.a

LIBRARIES = ${QCDLIB} ${SCIDAC_LIBRARIES}

# Default rule for C compilation
.c.o: ; ${CC} -c ${CFLAGS} $<

# To force a full remake when changing targets
LASTMAKE = .lastmake.${MAKEFILE}.${PRECISION}.${MYTARGET}

${LASTMAKE}: ${ALL_MAKES}
	-/bin/rm -f .lastmake.*
	${MAKE} -f ${MAKEFILE} clean
	touch ${LASTMAKE}

# All make files used in this compilation
ALL_MAKES = Make_template                   \
            ${MAKEFILE}                     \
            ../Make_template_qop            \
            ../Make_template_scidac         \
            ../generic/Make_template        \
            ../generic_nhyp/Make_template   \
            ../generic_wilson/Make_template \
            ../generic_clover/Make_template

# To force a remake when changing any make file, header, or target
${OBJECTS} : ${HEADERS} ${LASTMAKE} ${ALL_MAKES}

ifeq ($(strip ${HAVEQMP}),true)
  DHAVE_QMP = -DHAVE_QMP
endif

ifeq ($(strip ${HAVEQIO}),true)
  DHAVE_QIO = -DHAVE_QIO
endif

ifeq ($(strip ${HAVEQDP}),true)
  DHAVE_QDP = -DHAVE_QDP
endif

ifeq ($(strip ${HAVEQOP}),true)
  DHAVE_QOP = -DHAVE_QOP
endif

DARCH = ${DHAVE_QMP} ${DHAVE_QIO} ${DHAVE_QDP} ${DHAVE_QOP}

# LU specifies LU decomposition with standard cg inversions
#
##### Targets:
# Optional DEFINES for timing:
# -DCGTIME for cg timing and iterations

# targets with plaquette action (including SF)


su3_phi::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES = ${DEFINES} -DLU -DPHI_ALGORITHM "

su3_hmc::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES = ${DEFINES} -DLU -DPHI_ALGORITHM -DHMC_ALGORITHM " \
	"EXTRA_OBJECTS = d_action.o   "

su3_hmc_spectrum::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES = ${DEFINES} -DLU -DPHI_ALGORITHM -DHMC_ALGORITHM -DSPECTRUM " \
	"EXTRA_OBJECTS = d_action.o gaugefix2.o t_props_cl.o w_spectrum_cl.o "

su3_hmc_screen::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES = ${DEFINES} -DLU -DPHI_ALGORITHM -DHMC_ALGORITHM -DSPECTRUM \
             -DSCREEN " \
	"EXTRA_OBJECTS = d_action.o gaugefix2.o s_props_cl.o "

su3_hmc_pcac::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES = ${DEFINES} -DLU -DPHI_ALGORITHM -DHMC_ALGORITHM -DPCAC " \
	"EXTRA_OBJECTS = d_action.o pcac_t.o pcac_x.o "

clean:
	-/bin/rm -f *.o

# Rules for generic routines
include ../generic/Make_template

# Rules for generic_wilson routines
include ../generic_wilson/Make_template

# Rules for generic_clover routines
include ../generic_clover/Make_template

# Rules for generic_nhyp routines
include ../generic_nhyp/Make_template

libmake:
	@echo Building libraries with ${MAKELIBRARIES}
	cd ${LIBDIR} ;\
	${MAKE} -f ${MAKELIBRARIES} "APP_CC=${CC}" "PRECISION=${PRECISION}" all

localmake: ${OBJECTS} ${LIBRARIES}
	${LD} -o ${MYTARGET} ${LDFLAGS} \
	${OBJECTS} ${QCDLIB} ${ILIB} -lm
	touch localmake

target: libmake localmake



